// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String  @map("user_id")
  type                     String
  provider                 String
  providerAccountId        String  @map("provider_account_id")
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  hash          String?
  firstName     String?   @map("first_name")
  lastName      String?   @map("last_name")
  image         String?
  accounts      Account[]
  sessions      Session[]
  cars          Car[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

enum CarType {
  Sedan
  SUV
  Truck
  Van
  Coupe
  Convertible
  Hatchback
  Wagon
  Other
}

enum EngineType {
  Gasoline
  Diesel
  Electric
  Hybrid
  Other
}

enum GearboxType {
  Manual
  Automatic
}

model Car {
  id             String       @id @default(cuid())
  type           CarType?
  brand          String
  model          String
  generation     String?
  productionYear Int?         @map("production_year")
  engineType     EngineType?  @map("engine_type")
  engineCapacity Int?         @map("engine_capacity")
  enginePower    Int?         @map("engine_power")
  gearboxType    GearboxType? @map("gearbox_type")

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  Repair Repair[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("cars")
}

model Repair {
  id String @id @default(cuid())

  title       String
  description String?
  price       Int?
  date        DateTime?
  mileage     Int?

  carId String @map("car_id")
  car   Car    @relation(fields: [carId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("repairs")
}
